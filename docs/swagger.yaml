definitions:
  auth.Token:
    properties:
      token:
        type: string
    type: object
  models.AccessToken:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      userId:
        type: integer
    type: object
  models.ActivateBody:
    properties:
      code:
        type: string
      password:
        type: string
    type: object
  models.ChangePassword:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  models.ChangeUser:
    properties:
      active:
        type: boolean
      email:
        type: string
      id:
        type: integer
      login:
        type: string
      name:
        type: string
      surname:
        type: string
    type: object
  models.CodeCheckResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      surname:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      success:
        type: boolean
    type: object
  models.RecoverySubmit:
    properties:
      code:
        type: string
      password:
        type: string
    type: object
  models.RegistrationCodeBody:
    properties:
      code:
        type: string
    type: object
  models.SendMail:
    properties:
      email:
        type: string
    type: object
  models.SuccessResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  models.User:
    properties:
      active:
        type: boolean
      created:
        type: string
      email:
        type: string
      id:
        type: integer
      login:
        type: string
      name:
        type: string
      surname:
        type: string
      updated:
        type: string
    type: object
  models.UserInfo:
    properties:
      active:
        type: boolean
      created:
        type: string
      email:
        type: string
      id:
        type: integer
      login:
        type: string
      name:
        type: string
      role:
        type: integer
      surname:
        type: string
      updated:
        type: string
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.UserLoginInfo:
    properties:
      access_token:
        type: string
      alive:
        type: integer
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.UserRegister:
    properties:
      email:
        type: string
      login:
        type: string
      name:
        type: string
      surname:
        type: string
    type: object
  models.UserRegisterComplete:
    properties:
      error:
        type: boolean
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.UsersArray:
    properties:
      id:
        items:
          type: integer
        type: array
    type: object
info:
  contact: {}
paths:
  /admin/user/change:
    post:
      consumes:
      - application/json
      description: Endpoint to change user data. Request must be include "id"
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ChangeUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SuccessResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
      summary: Change user data
      tags:
      - Admin
  /admin/users:
    get:
      consumes:
      - application/json
      description: Endpoint to get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
      summary: Get all users
      tags:
      - Admin
  /admin/users/delete:
    delete:
      consumes:
      - application/json
      description: Endpoint to delete user account
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UsersArray'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SuccessResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
      summary: Delete user account
      tags:
      - Admin
  /auth/activate:
    post:
      consumes:
      - application/json
      description: Endpoint to activate account by registration code
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ActivateBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
      summary: Activate account
      tags:
      - Auth
  /auth/activate/send:
    post:
      consumes:
      - application/json
      description: Endpoint to send register email to submit registration
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.SendMail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
      summary: Send register email
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Endpoint to login into account
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserLoginInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Auth into account
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Endpoint to logout from account
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
      summary: Logout from account
      tags:
      - Auth
  /auth/recovery:
    post:
      consumes:
      - application/json
      description: Endpoint to recovery user account by email
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.SendMail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
      summary: Recovery user account
      tags:
      - Auth
  /auth/recovery/submit:
    post:
      consumes:
      - application/json
      description: Endpoint to submit recovery account and create a new password for
        account
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RecoverySubmit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
      summary: Recovery submit
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Endpoint to get a new access token by refresh token
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.Token'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccessToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
      summary: Get new access token
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Endpoint to register a new user account
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserRegisterComplete'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
      summary: Register account
      tags:
      - Auth
  /auth/register/check:
    post:
      consumes:
      - application/json
      description: Endpoint to check registration code if exist
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RegistrationCodeBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CodeCheckResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
      summary: Check registration code if exist
      tags:
      - Auth
  /user/changepass:
    post:
      consumes:
      - application/json
      description: Endpoint to change user password
      parameters:
      - description: request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SuccessResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Change user password
      tags:
      - User
  /user/info:
    get:
      consumes:
      - application/json
      description: Endpoint to get user info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserInfo'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get user info
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    description: asdasdas
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
